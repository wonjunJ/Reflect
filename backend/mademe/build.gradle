plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.ssafy'
version = '0.0.1-SNAPSHOT'

//ext["hibernate.version"] = "6.4.2.Final"

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'io.springfox:springfox-boot-starter:3.0.0'  // Springfox Swagger 의존성 추가
	implementation 'io.springfox:springfox-swagger-ui:3.0.0'  // Swagger UI 의존성 추가
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'  //jwt관련 의존성
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'  // WebSocket 의존성 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'


	// https://mvnrepository.com/artifact/io.openvidu/openvidu-java-client
	implementation 'io.openvidu:openvidu-java-client:2.29.0'

	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	developmentOnly 'org.springframework.boot:spring-boot-devtools'  // 개발환경에서만 의존성 추가
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

def querydslSrcDir = 'src/main/generated'
clean {
	delete file(querydslSrcDir)
}
tasks.withType(JavaCompile) {
	options.generatedSourceOutputDirectory = file(querydslSrcDir)
	options.encoding = 'UTF-8'
}

tasks.named('test') {
	useJUnitPlatform()
}
